# Use the official PHP image as the base
FROM php:8.2-fpm

# Set working directory
WORKDIR /var/www/html

# Install system dependencies and Node.js
RUN apt-get update && apt-get install -y \
    git \
    curl \
    libpng-dev \
    libjpeg-dev \
    libfreetype6-dev \
    libonig-dev \
    libzip-dev \
    unzip \
    libicu-dev \
    gnupg \
    ca-certificates \
    # Add ImageMagick dependencies
    imagemagick \
    libmagickwand-dev \
    # SQLite support
    sqlite3 \
    libsqlite3-dev \
    && curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs \
    && docker-php-ext-configure gd --with-freetype --with-jpeg \
    && docker-php-ext-install gd mbstring zip pdo_sqlite intl \
    # Install and enable the imagick extension
    && pecl install imagick \
    && docker-php-ext-enable imagick \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Install Composer
COPY --from=composer:2 /usr/bin/composer /usr/bin/composer

# Copy custom PHP configuration
COPY php.ini /usr/local/etc/php/conf.d/uploads.ini

# Fix git dubious ownership issue
RUN git config --global --add safe.directory /var/www/html

# Copy composer files first for better caching
COPY composer.json composer.lock ./

# Copy package.json for Node.js dependencies
COPY package*.json ./

# Copy entrypoint script
COPY docker-entrypoint-coolify.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/docker-entrypoint-coolify.sh

# Install PHP dependencies
RUN composer install --no-dev --optimize-autoloader

# Install Node.js dependencies and build assets
RUN npm ci --only=production && npm run build

# Copy the rest of the application
COPY . .

# Create necessary directories and set permissions
RUN mkdir -p /var/www/html/database \
    && mkdir -p /var/www/html/storage/framework/{cache,sessions,views} \
    && mkdir -p /var/www/html/storage/logs \
    && mkdir -p /var/www/html/bootstrap/cache \
    && touch /var/www/html/database/database.sqlite \
    && chown -R www-data:www-data /var/www/html \
    && chmod -R 775 /var/www/html/storage \
    && chmod -R 775 /var/www/html/bootstrap/cache \
    && chmod 664 /var/www/html/database/database.sqlite

# Set entrypoint
ENTRYPOINT ["docker-entrypoint-coolify.sh"]

# Start PHP-FPM
CMD ["php-fpm"] 